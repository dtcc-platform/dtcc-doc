stages:
  - build
  - deploy

#image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
#services:
  #- mysql:latest
  #- redis:latest
  #- postgres:latest

#before_script:
 #- apk update && apk add openssh-client rsync
 #- eval $(ssh-agent -s)
 #- mkdir -p ~/.ssh
 #- echo "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config
 #- echo "$SSH_PRIVATE_KEY" > key.pem
 #- echo "$PORTAL_HOST_KEY" > ~/.ssh/known_hosts
 #- echo "$SSH_PRIVATE_KEY"
 #- echo "$SSH_PRIVATE_KEY" | ssh-add -
 #- printenv SSH_PRIVATE_KEY 
 #- cat ~/.ssh/known_hosts
 #- chmod 400 key.pem
 #- chmod +x deploy.sh


# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
#cache:
#  paths:
#    - node_modules/

build:
  stage: build
  image: node:16-alpine
  script:
    #- sudo apt-get install lftp -y # add extra (outside of registered Docker file) dependencies here
    - sh ./bin/dtcc-build-documentation && cd website && npm install && npm run build
    - pwd 
    - ls
  artifacts:
    paths:
      - website/build/
      #- unittests/



#build:
#  stage: build
#  image: node:16-alpine
#  script:
    #- aws s3 ls s3://$S3_BUCKET
#    - cd website
#    - npm install
    #- node ./specs/start.js ./specs/async.spec.js
#    - ls
#    - pwd
#    - npm run build
    #- #ls
    #- #cd dist
    #- #tar -czvf dist.tar.gz *
    #- #cd ..
    #- #ls 
    #- /bin/sh deploy.sh
    #-oStrictHostKeyChecking=no
#  artifacts:
#    paths:
#      - build/
  #- unittests/
 

deploy:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - ls -alt
    - cd website/build
    - ls -alt
    - aws s3 ls s3://$S3_BUCKET
    - aws s3 sync . s3://$S3_BUCKET
    #- npm install
    #- node ./specs/start.js ./specs/db-postgres.spec.js
variables:
     GIT_SUBMODULE_STRATEGY: normal 
